"""
3.	Сформировать из введенного числа обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
 то надо вывести число 6843.

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все цифры извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321

Не забудьте проверить и на числах, заканчивающихся нулем.
Пример:
Введите число, которое требуется перевернуть: 1230
Перевернутое число: 0321
"""


# по своей реализации задача похожа на предыдущую,только для вытаскивания чисел нам пригодится остаток от деления на 10

def inverted_number(n, final_string):
    if n == 0:
        return f"Inverted number is {final_string}"
    else:
        final_string += str(n % 10)  # вычленяем последнюю цифру
    return inverted_number(n // 10, final_string)  # рекурсивно проходим без последней цифры


try:
    numb = int(input("Input the number: "))
except ValueError:
    print("Wrong input for number! Try again")
else:
    if numb == 0:
        print("Inverted number is 0")
    else:
        print(inverted_number(abs(numb), ""))  # abs добавил на всякий случай, чтобы не было проблем на тестах
