"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def do_the_math(operation, n1, n2):
    if operation == "+":
        return n1 + n2
    elif operation == "-":
        return n1 - n2
    elif operation == "*":
        return n1 * n2
    else:
        try:
            return n1 / n2
        except ZeroDivisionError:
            print("Error! Division by zero! Try again")  # надеюсь нет ошибки в том, что после исключения выдаётся
            # Your result is None


def my_operations():
    operand = input("Input the operand(+, -, *, / or 0 for exit): ")
    if operand == "0":
        return 1
    elif operand == "":  # Программа почему-то пропускала пустоту на тестах, написал заглушку
        print("Void is not a sign of operation!")
        my_operations()
    elif operand in "+-*/":
        try:
            num1 = int(input("Input first number: "))
            num2 = int(input("Input second number: "))
        except ValueError:
            print("Wrong input for number! Try again")
            my_operations()
        print(f"Your result is {str(do_the_math(operand, num1, num2))}")
        my_operations()
    else:
        print("Wrong input for operation sign! Try again")
        my_operations()


my_operations()
